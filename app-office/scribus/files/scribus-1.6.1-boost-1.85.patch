From 3e80b387a226f1abac2bcce6e4300467c189d264 Mon Sep 17 00:00:00 2001
From: Jean Ghali <jghali@libertysurf.fr>
Date: Sat, 1 Jun 2024 22:04:13 +0000
Subject: [PATCH] #17229: scribus fails to compile with boost 1.85.0

git-svn-id: svn://scribus.net/branches/Version16x/Scribus@26170 11d20701-8431-0410-a711-e3c959e3b870
--- a/scribus/third_party/lib2geom/point.h
+++ b/scribus/third_party/lib2geom/point.h
@@ -121,10 +121,14 @@ class Point {
 
     Point &operator*=(Matrix const &m);
 
-    inline int operator == (const Point &in_pnt) {
+    inline bool operator==(const Point &in_pnt) const {
         return ((_pt[X] == in_pnt[X]) && (_pt[Y] == in_pnt[Y]));
     }
 
+    inline bool operator!=(const Point &in_pnt) const {
+        return ((_pt[X] != in_pnt[X]) || (_pt[Y] != in_pnt[Y]));
+    }
+
     friend inline std::ostream &operator<< (std::ostream &out_file, const Geom::Point &in_pnt);
 };
 
@@ -144,14 +148,6 @@ inline Point operator^(Point const &a, Point const &b) {
     return ret;
 }
 
-//IMPL: boost::EqualityComparableConcept
-inline bool operator==(Point const &a, Point const &b) {
-    return (a[X] == b[X]) && (a[Y] == b[Y]);
-}
-inline bool operator!=(Point const &a, Point const &b) {
-    return (a[X] != b[X]) || (a[Y] != b[Y]);
-}
-
 /** This is a lexicographical ordering for points.  It is remarkably useful for sweepline algorithms*/
 inline bool operator<=(Point const &a, Point const &b) {
     return ( ( a[Y] < b[Y] ) ||
