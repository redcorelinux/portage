* add option to respect AR
 (respecting PKG_CONFIG is handled in the ebuild)
* don't strip even with debug symbols disabled
* fix icu unbundling underlinking
* handle recastnavigation unbundling
--- a/SConstruct
+++ b/SConstruct
@@ -239,4 +239,5 @@
 opts.Add("CXX", "C++ compiler")
 opts.Add("CC", "C compiler")
+opts.Add("AR", "Archiver")
 opts.Add("LINK", "Linker")
 opts.Add("CCFLAGS", "Custom flags for both the C and C++ compilers")
@@ -545,10 +546,4 @@
             else:
                 env.Append(CCFLAGS=["-g2"])
-        else:
-            if methods.using_clang(env) and not methods.is_vanilla_clang(env):
-                # Apple Clang, its linker doesn't like -s.
-                env.Append(LINKFLAGS=["-Wl,-S", "-Wl,-x", "-Wl,-dead_strip"])
-            else:
-                env.Append(LINKFLAGS=["-s"])
 
         if env["optimize"] == "speed":
--- a/platform/linuxbsd/detect.py
+++ b/platform/linuxbsd/detect.py
@@ -221,5 +221,5 @@
 
     if not env["builtin_icu"]:
-        env.ParseConfig("pkg-config icu-uc --cflags --libs")
+        env.ParseConfig("pkg-config icu-i18n --cflags --libs")
 
     if not env["builtin_harfbuzz"]:
@@ -232,4 +232,7 @@
         env.ParseConfig("pkg-config libenet --cflags --libs")
 
+    if not env["builtin_recast"]:
+        env.ParseConfig("pkg-config recastnavigation --cflags --libs")
+
     if not env["builtin_squish"]:
         env.ParseConfig("pkg-config libsquish --cflags --libs")
