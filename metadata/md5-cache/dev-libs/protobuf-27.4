BDEPEND=emacs? ( app-editors/emacs:* ) !protobuf? ( >=dev-libs/protobuf-27.4 ) app-alternatives/ninja >=dev-build/cmake-3.20.5
DEFINED_PHASES=compile configure install postinst postrm prepare test
DEPEND=dev-libs/jsoncpp[abi_x86_32(-)?,abi_x86_64(-)?,abi_x86_x32(-)?,abi_mips_n32(-)?,abi_mips_n64(-)?,abi_mips_o32(-)?,abi_s390_32(-)?,abi_s390_64(-)?] >=dev-cpp/abseil-cpp-20230802:=[abi_x86_32(-)?,abi_x86_64(-)?,abi_x86_x32(-)?,abi_mips_n32(-)?,abi_mips_n64(-)?,abi_mips_o32(-)?,abi_s390_32(-)?,abi_s390_64(-)?] zlib? ( sys-libs/zlib[abi_x86_32(-)?,abi_x86_64(-)?,abi_x86_x32(-)?,abi_mips_n32(-)?,abi_mips_n64(-)?,abi_mips_o32(-)?,abi_s390_32(-)?,abi_s390_64(-)?] ) test? ( >=dev-cpp/gtest-1.11[abi_x86_32(-)?,abi_x86_64(-)?,abi_x86_x32(-)?,abi_mips_n32(-)?,abi_mips_n64(-)?,abi_mips_o32(-)?,abi_s390_32(-)?,abi_s390_64(-)?] )
DESCRIPTION=Google's Protocol Buffers - Extensible mechanism for serializing structured data
EAPI=8
HOMEPAGE=https://protobuf.dev/
INHERIT=cmake-multilib elisp-common multilib
IUSE=conformance debug emacs examples +libprotoc libupb +protobuf +protoc test zlib abi_x86_32 abi_x86_64 abi_x86_x32 abi_mips_n32 abi_mips_n64 abi_mips_o32 abi_s390_32 abi_s390_64
KEYWORDS=~alpha ~amd64 ~arm ~arm64 ~loong ~mips ~ppc64 ~riscv ~s390 ~sparc ~x86 ~amd64-linux ~x86-linux ~arm64-macos ~x64-macos
LICENSE=BSD
RDEPEND=dev-libs/jsoncpp[abi_x86_32(-)?,abi_x86_64(-)?,abi_x86_x32(-)?,abi_mips_n32(-)?,abi_mips_n64(-)?,abi_mips_o32(-)?,abi_s390_32(-)?,abi_s390_64(-)?] >=dev-cpp/abseil-cpp-20230802:=[abi_x86_32(-)?,abi_x86_64(-)?,abi_x86_x32(-)?,abi_mips_n32(-)?,abi_mips_n64(-)?,abi_mips_o32(-)?,abi_s390_32(-)?,abi_s390_64(-)?] zlib? ( sys-libs/zlib[abi_x86_32(-)?,abi_x86_64(-)?,abi_x86_x32(-)?,abi_mips_n32(-)?,abi_mips_n64(-)?,abi_mips_o32(-)?,abi_s390_32(-)?,abi_s390_64(-)?] ) emacs? ( app-editors/emacs:* ) !protobuf? ( >=dev-libs/protobuf-27.4 )
REQUIRED_USE=|| ( libprotoc libupb protobuf protoc )
RESTRICT=!test? ( test )
SLOT=0/27.4.0
SRC_URI=https://github.com/protocolbuffers/protobuf/releases/download/v27.4/protobuf-27.4.tar.gz
_eclasses_=cmake	10a50dfaf728b802fcfd37f8d0da9056	cmake-multilib	37d23064f303dcf23453353ab8c77059	elisp-common	abb2dda42f680fce87602c8273f832c7	flag-o-matic	e503ea5acc20410237ba33ec3f7c857d	multibuild	d67e78a235f541871c7dfe4cf7931489	multilib	c19072c3cd7ac5cb21de013f7e9832e0	multilib-build	e8aed98bd43dbd25694310a660ad562c	multilib-minimal	4b0f1857965db8869a729948d5277e0b	multiprocessing	30ead54fa2e2b5f9cd4e612ffc34d0fe	ninja-utils	2df4e452cea39a9ec8fb543ce059f8d6	out-of-source-utils	1a9007554652a6e627edbccb3c25a439	toolchain-funcs	333970c740aa7b1a92e4fcdc52f612bd	xdg-utils	baea6080dd821f5562d715887954c9d3
_md5_=6db020dde59866a7fb100fe65203fb44
