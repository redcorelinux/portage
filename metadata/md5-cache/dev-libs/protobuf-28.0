BDEPEND=emacs? ( app-editors/emacs:* ) !protobuf? ( >=dev-libs/protobuf-28.0 ) app-alternatives/ninja >=dev-build/cmake-3.20.5
DEFINED_PHASES=compile configure install postinst postrm prepare test
DEPEND=dev-libs/jsoncpp[abi_x86_32(-)?,abi_x86_64(-)?,abi_x86_x32(-)?,abi_mips_n32(-)?,abi_mips_n64(-)?,abi_mips_o32(-)?,abi_s390_32(-)?,abi_s390_64(-)?] >=dev-cpp/abseil-cpp-20230802:=[abi_x86_32(-)?,abi_x86_64(-)?,abi_x86_x32(-)?,abi_mips_n32(-)?,abi_mips_n64(-)?,abi_mips_o32(-)?,abi_s390_32(-)?,abi_s390_64(-)?] zlib? ( sys-libs/zlib[abi_x86_32(-)?,abi_x86_64(-)?,abi_x86_x32(-)?,abi_mips_n32(-)?,abi_mips_n64(-)?,abi_mips_o32(-)?,abi_s390_32(-)?,abi_s390_64(-)?] ) test? ( >=dev-cpp/gtest-1.11[abi_x86_32(-)?,abi_x86_64(-)?,abi_x86_x32(-)?,abi_mips_n32(-)?,abi_mips_n64(-)?,abi_mips_o32(-)?,abi_s390_32(-)?,abi_s390_64(-)?] )
DESCRIPTION=Google's Protocol Buffers - Extensible mechanism for serializing structured data
EAPI=8
HOMEPAGE=https://protobuf.dev/
INHERIT=cmake-multilib elisp-common multilib
IUSE=conformance debug emacs examples +libprotoc libupb +protobuf +protoc test zlib abi_x86_32 abi_x86_64 abi_x86_x32 abi_mips_n32 abi_mips_n64 abi_mips_o32 abi_s390_32 abi_s390_64
KEYWORDS=~alpha ~amd64 ~arm ~arm64 ~loong ~mips ~ppc64 ~riscv ~s390 ~sparc ~x86 ~amd64-linux ~x86-linux ~arm64-macos ~x64-macos
LICENSE=BSD
RDEPEND=dev-libs/jsoncpp[abi_x86_32(-)?,abi_x86_64(-)?,abi_x86_x32(-)?,abi_mips_n32(-)?,abi_mips_n64(-)?,abi_mips_o32(-)?,abi_s390_32(-)?,abi_s390_64(-)?] >=dev-cpp/abseil-cpp-20230802:=[abi_x86_32(-)?,abi_x86_64(-)?,abi_x86_x32(-)?,abi_mips_n32(-)?,abi_mips_n64(-)?,abi_mips_o32(-)?,abi_s390_32(-)?,abi_s390_64(-)?] zlib? ( sys-libs/zlib[abi_x86_32(-)?,abi_x86_64(-)?,abi_x86_x32(-)?,abi_mips_n32(-)?,abi_mips_n64(-)?,abi_mips_o32(-)?,abi_s390_32(-)?,abi_s390_64(-)?] ) emacs? ( app-editors/emacs:* ) !protobuf? ( >=dev-libs/protobuf-28.0 )
REQUIRED_USE=|| ( libprotoc libupb protobuf protoc )
RESTRICT=!test? ( test )
SLOT=0/28.0.0
SRC_URI=https://github.com/protocolbuffers/protobuf/releases/download/v28.0/protobuf-28.0.tar.gz
_eclasses_=cmake	10a50dfaf728b802fcfd37f8d0da9056	cmake-multilib	37d23064f303dcf23453353ab8c77059	elisp-common	abb2dda42f680fce87602c8273f832c7	flag-o-matic	fa33e3696fe4689dda7e9affe92e2c94	multibuild	45df57b1877333d70a9e894f6c8fdb3a	multilib	7e1347c006a76bb812f3a9f663b79991	multilib-build	8cdc28ee17e24f9f57730a28fe166a21	multilib-minimal	b93489cf816ff90770a3c1c61b25db44	multiprocessing	e644caa6eb7ce7e5ab0864383ac13ad9	ninja-utils	2df4e452cea39a9ec8fb543ce059f8d6	out-of-source-utils	a0eb740debe3d472355e8bc52f62e0ac	toolchain-funcs	948855ec7ad9f11351edf9066708dfa9	xdg-utils	5465aed08f1dfc2a75f14cbea4272961
_md5_=6db020dde59866a7fb100fe65203fb44
